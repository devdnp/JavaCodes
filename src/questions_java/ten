Q89. I have multiple constructors defined in a class. Is it possible to call a constructor from
another constructor's body?
Ans: If a class has multiple constructors, it's possible to call one constructor from the body of
another one using this().

Q90. Whatâ€™s meant by anonymous class?
Ans: An anonymous class is a class defined without any name in a single line of code using new
keyword.
For example, in below code we have defined an anonymous class in one line of code:

public java.util.Enumeration testMethod(){

    return new java.util.Enumeration(){
        @Override
        public boolean hasMoreElements(){
            // TODO Auto-generated method stub
            return false;
        }
        @Override
        public Object nextElement(){
            // TODO Auto-generated method stub
            return null;
        }
    }
}

Q91. Is there a way to increase the size of an array after its declaration?
Ans: Arrays are static and once we have specified its size, we can't change it. If we want to use
such collections where we may require a change of size ( no of items), we should prefer vector
over array.

Q92. If an application has multiple classes in it, is it okay to have a main method in more than
one class?
Ans: If there is main method in more than one classes in a java application, it won't cause any
issue as entry point for any application will be a specific class and code will start from the main
method of that particular class only.

Q93. I want to persist data of objects for later use. What's the best approach to do so?
Ans: The best way to persist data for future use is to use the concept of serialization.

Q94. What is a Local class in Java?
Ans: In Java, if we define a new class inside a particular block, it's called a local class. Such a class
has local scope and isn't usable outside the block where its defined.

Q95. String and StringBuffer both represent String objects. Can we compare String and
StringBuffer in Java?
Ans: Although String and StringBuffer both represent String objects, we can't compare them with
each other and if we try to compare them, we get an error.

Q96. Which API is provided by Java for operations on set of objects?
Ans: Java provides a Collection API which provides many useful methods which can be applied on a
set of objects. Some of the important classes provided by Collection API include ArrayList,
HashMap, TreeSet and TreeMap.

Q97. Can we cast any other type to Boolean Type with type casting?
Ans: No, we can neither cast any other primitive type to Boolean data type nor can cast Boolean
data type to any other primitive data type.

Q98. Can we use different return types for methods when overridden?
Ans: The basic requirement of method overriding in Java is that the overridden method should
have same name, and parameters.But a method can be overridden with a different return type as
long as the new return type extends the original.
For example , method is returning a reference type.
Class B extends A{
    A method(int x){
        //original method
    }
    B method(int x){
        //overridden method
    }
}

Q99. What's the base class of all exception classes?
Ans: In Java, Java.lang.Throwable is the super class of all exception classes and all exception
classes are derived from this base class.